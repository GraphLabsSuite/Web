@model PagedList.IPagedList<GraphLabs.DomainModel.Group>

@{
    ViewBag.Title = "Группы";
}

<h2>Группы</h2>

<p>
    @Html.ActionLink("Создать новую", "Create")
</p>
<table>
    <tr>
        <th>
            @Html.ActionLink("Название", "Index", new { sortOrder=ViewBag.NameSortParam })
        </th>
        <th>
            @Html.ActionLink("Доступность", "Index", new { sortOrder=ViewBag.AvailableSortParam })
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsOpen)
        </td>
        <td>
            @Html.ActionLink("Редактировать", "Edit", new { id=item.Id_Group }) |
            @Html.ActionLink("Подробности", "Details", new { id=item.Id_Group }) |
            @Html.ActionLink("Управление правами", "Perm", new { id=item.Id_Group })
        </td>
    </tr>
}

</table>

<div>
    Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount

    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort })
        @Html.Raw(" ");
        @Html.ActionLink("Пред", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort })
    }
    else
    {
        @:<<
        @Html.Raw(" ");
        @:Пред
    }

    @if (Model.HasNextPage) 
    { 
        @Html.ActionLink("След", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort }) 
        @Html.Raw(" "); 
        @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort }) 
    } 
    else 
    { 
        @:След 
        @Html.Raw(" ") 
        @:>> 
    } 
</div>