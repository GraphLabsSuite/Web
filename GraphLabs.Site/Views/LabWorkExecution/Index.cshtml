@using GraphLabs.Site.Models.LabExecution
@model VariantExecutionModelBase
@{
    ViewBag.Title = "Лабораторная работа";
    ViewBag.HideNavigationMenu = true;
}

<h2>@Model.LabName</h2>

@if (@Model is TaskVariantExecutionModel)
{
    var taskModel = (TaskVariantExecutionModel)@Model;
    if (taskModel != null)
        <h5>@taskModel.TaskName</h5>

        <div id="task-module-wrapper" class="ui-resizable">
            <div id="loading-please-wait">
                <img src="../../Images/graphlabs.png" alt="" />
                <p>Задание загружается. Пожалуйста, подождите.</p>
            </div>
            <object id="task-module-object" data="data:application/x-silverlight-2," type="application/x-silverlight-2">
                <param name="source" value="/Content/SilverlightAppsProvider.ashx?kind=task&taskId=@taskModel.TaskId" />
                <param name="onerror" value="onSilverlightError" />
                <param name="background" value="#E8EDEF" />
                <param name="minRuntimeVersion" value="2.0.31005.0" />
                <param name="autoUpgrade" value="true" />
                <param name="initParams" value="@taskModel.InitParams" />
                <param name="onload" value="onTaskModuleLoaded" />
                <param name="onerror" value="onTaskModuleLoaded" />
                <a href="http://go.microsoft.com/fwlink/?LinkID=124807" style="text-decoration: none;">
                    <img src="http://go.microsoft.com/fwlink/?LinkId=108181" alt="Get Microsoft Silverlight" style="border-style: none" />
                </a>
            </object>
        </div>
}

@if (@Model is VariantExecutionCompleteModel) {
    var completeModel = (VariantExecutionCompleteModel)Model;
    <h4>@completeModel.ResultMessage</h4>
}

@if (@Model is TestExecutionModel)
{
    var testModel = (TestExecutionModel)@Model;
    <h2>Вопрос @testModel.Name</h2>
    <label>Текст вопроса</label>
    <p id="questionText">@testModel.Question</p>
    <ul id="questionAnswers">
        @foreach (var answer in @testModel.Answers)
        {
            <li><input type="checkbox" id="answer_@answer.Id" value="@answer.Answer"/> @answer.Answer</li>
        }
    </ul>
    <button onclick="sendQuestion(@testModel.QuestionId);" type="button">Отправить</button>
}
@for (int i = 0; i < Model.OtherTasks.Length; ++i)
{
    if (Model.OtherTasks[i] is TaskListEntryModel)
    {
        var testTask = (TaskListEntryModel)@Model.OtherTasks[i];

        <input type="button" class="TaskNavigation" onclick="sendTask(@testTask.TaskId)" value="@(i + 1)"
               @if (Model.OtherTasks[i].State != TaskExecutionState.New)
               {
                   @Html.Raw(" disabled ")
               }/>
    }
    if (Model.OtherTasks[i] is TestListEntryModel)
    {
        var testTask = (TestListEntryModel)@Model.OtherTasks[i];
        <input type="button" class="TestNavigation" onclick="sendTest(@testTask.QuestionId)" value="@(i + 1)"
               @if (Model.OtherTasks[i].State != TaskExecutionState.New)
               {
                   @Html.Raw(" disabled ")
               } />
    }
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryui")

    <script>
        var sendTask = (task) => {
            if (confirm("Будет потерян прогресс текущего задания! Продолжить?")) {
                location.href = "/LabWorkExecution/Index?&LabVarId=" + @Model.VariantId + "&testIndex=" + task;
            }
        };

        var sendTest = (test) => {
            if (confirm("Будет потерян прогресс текущего задания! Продолжить?")) {
                location.href = "/LabWorkExecution/Index?&LabVarId=" + @Model.VariantId + "&testIndex=" + test;
            }
        };

        var sendQuestion = (test) => {
            location.href = "/LabWorkExecution/Index?&LabVarId=" + @Model.VariantId + "&testIndex=" + test;
        };

        var TaskComplete = () => {
            location.href = "/LabWorkExecution/TaskComplete";
        };

        var onTaskModuleLoaded = () => {
            // делаем размер изменимым
            $("#task-module-wrapper").resizable();
            // убираем надпись о загрузке
            $("loading-please-wait").remove();

            // хак, чтобы объект после загрузки принял нужную форму
            $("#task-module-object").css("height", "100%");
            $("#task-module-object").css("min-height", 400);
        };
    </script>
}
