@model GraphLabs.Site.Models.SurveyCreatingModel

@{
    ViewBag.Title = "Добавить тему";
}

<hgroup>
    <h2>@ViewBag.Title</h2>
    @Html.ActionLink("Вернуться к списку вопросов", "Index")
</hgroup>

@using (Html.BeginForm())
{
    <table width="60%" id="tableCategory" class="nakedTable">
        <tr>
            <td width="16%">
                Введите название темы
            </td>
            <td>
                <div class="editor-field editText">
                    @Html.EditorFor(model => model.CategoryId)
                    @Html.ValidationMessageFor(model => model.CategoryId)
                </div>
            </td>
            <td width="20px">
                <a href='#' id="deleteCategory" title="Нажмите, чтобы удалить тему" style="font-size:2.0em; text-decoration-color:#282828; text-decoration:none; vertical-align:10px">&#10005;</a>
            </td>
        </tr>
    </table><table width="60%" id="tableAddCategory" class="nakedTable">
    <tr>
        <td width="15px">
            <button class="circle-add-button" id="addCategory" value="Добавить новую тему"></button>
        </td>
        <td>
            Добавить новую тему
        </td>
    </tr>
</table><input type="submit" value="Сохранить" id="submitButton" />}
@section Scripts
{
    <script>

                //отсчет от 0
                /*var optionsCount = (Model.QuestionOptions.Count - 1);
                var countQuestions = 1;*/

                /*добавление строки с новой темой*/
                $("#addCategory").click(createCategory);

                function createCategory(e) {
                    e.preventDefault();
                    alert("Я пришел");
                    //optionsCount++;
                    var child = document.createElement('tr');
                    var subchild = document.createElement('td');
                    subchild.setAttribute('width','16%');
                    subchild.textContent = 'Введите название темы';
                    child.appendChild(subchild);
                    subchild = document.createElement('td');
                    var div = document.createElement('div');
                    div.setAttribute('class','editor-field editText')
                    div.appendChild(input);
                    var subchild = document.createElement('td');
                    subchild.setAttribute('width','20px');
                    subchild.textContent = 'Введите название темы';
                    var a = document.createElement('a');
                    a.setAttribute('href','#');
                    a.setAttribute('class','deleteOption');
                    a.setAttribute('title', 'Нажмите, чтобы удалить вариант ответа');
                    a.setAttribute('style','font-size:2.0em; text-decoration-color:#282828; text-decoration:none; vertical-align:10px');
                    a.textContent = "✕";
                    subchild.appendChild(a);
                    child.appendChild(subchild);
                    $(this)[0].parentNode.parentNode.offsetParent.previousElementSibling.childNodes[1].append(child);
                    a.addEventListener('click', deleteOption);
                    
                    /*child.appendChild(subchild);
                    subchild = document.createElement('td');
                    var input = document.createElement('input');
                    input.setAttribute('class','text-box single-line');
                    input.setAttribute('type','text');
                    input.setAttribute('value','');
                    input.setAttribute('id','QuestionOptions_' + optionsCount.toString() + '__Key');
                    input.setAttribute('name','QuestionOptions[' + optionsCount.toString() + '].Key');
                    var div = document.createElement('div');
                    div.setAttribute('class','editor-field editText')
                    div.appendChild(input);
                    subchild.appendChild(div);
                    child.appendChild(subchild);
                    subchild = document.createElement('td');
                    input = document.createElement('input');
                    input.setAttribute('class','check-box');
                    input.setAttribute('data-val','true');
                    input.setAttribute('data-val-required','Требуется поле Value.');
                    input.setAttribute('id','QuestionOptions_' + optionsCount.toString() + '__Value');
                    input.setAttribute('name','QuestionOptions[' + optionsCount.toString() + '].Value');
                    input.setAttribute('type','checkbox');
                    input.setAttribute('value','true');
                    subchild.appendChild(input);
                    input = document.createElement('input');
                    input.setAttribute('name','QuestionOptions[' + optionsCount.toString() + '].Value');
                    input.setAttribute('type','hidden');
                    input.setAttribute('value','false');
                    subchild.appendChild(input);
                    subchild.innerHTML+=" Правильный ответ";
                    child.appendChild(subchild);
                    subchild = document.createElement('td');
                    subchild.setAttribute('width','20px');
                    var a = document.createElement('a');
                    a.setAttribute('href','#');
                    a.setAttribute('class','deleteOption');
                    a.setAttribute('title', 'Нажмите, чтобы удалить вариант ответа');
                    a.setAttribute('style','font-size:2.0em; text-decoration-color:#282828; text-decoration:none; vertical-align:10px');
                    a.textContent = "✕";
                    subchild.appendChild(a);
                    child.appendChild(subchild);
                    $(this)[0].parentNode.parentNode.offsetParent.previousElementSibling.childNodes[1].append(child);
                    a.addEventListener('click', deleteOption);*/
                }

                function deleteOption() {
                  //  console.log($(this))
                    $(this).parent().parent().remove();
                    optionsCount--;
                    for(i = 1; i < optionsCount + 3; ++i)
                    {
                        $("table tr:eq(" + i + ") td input:eq(0)").attr("id","QuestionOptions_" + (i - 1).toString() + "__Key");
                        $("table tr:eq(" + i + ") td input:eq(0)").attr("name","QuestionOptions[" + (i - 1).toString() + "].Key");

                        $("table tr:eq(" + i + ") td input:eq(1)").attr("id","QuestionOptions_" + (i - 1).toString() + "__Value");
                        $("table tr:eq(" + i + ") td input:eq(1)").attr("name","QuestionOptions[" + (i - 1).toString() + "].Value");

                        $("table tr:eq(" + i + ") td input:eq(2)").attr("name","QuestionOptions[" + (i - 1).toString() + "].Value");
                    }
                }

                function deleteQuestion(e) {
                    e.preventDefault();
                    if (countQuestions == 1) { alert("Нельзя удалить последний вопрос!"); return }
                    countQuestions--;
                    var thisTable = this.parentNode.offsetParent;
                    var temp = thisTable.nextSibling;
                    while (temp.id !== 'tableAddOption') {
                        let temp1 = temp.nextSibling
                        temp.remove();
                        temp = temp1;
                    }
                    temp.remove();
                    thisTable.remove()
                }

                function addQuestion(e) {
                    e.preventDefault();
                    countQuestions++;
                    var tableAddQuestion = $(this)[0].parentNode.parentNode.parentNode.parentNode;
                    var submitButton = document.getElementById('submitButton');
                    tableAddQuestion.remove();
                    submitButton.remove();
                    //console.log(document.getElementById('tableQuestion').parentNode.childNodes)
                    var [,a,b,c,] = document.getElementById('tableQuestion').parentNode.childNodes;
                    [a,b,c] = [a,b,c].map(x => x.cloneNode(true));
                    console.log("abc");
                    console.log(a);
                    console.log(b);
                    console.log(c);
                    a.querySelector('input').value = "";
                    var bArray = Array.from(b.childNodes[1].childNodes);
                    console.log("ghbdtn");
                    bArray.slice(2, bArray.length).map(x => x.remove())
                    //b.querySelector('input').value = "";
                    a.querySelector('a').addEventListener('click', deleteQuestion);
                    b.querySelector('a').addEventListener('click', deleteOption);
                    c.querySelector('button').addEventListener('click', createOption)


                    $('#tableQuestion')[0].parentNode.appendChild(a);
                    $('#tableQuestion')[0].parentNode.appendChild(b);
                    $('#tableQuestion')[0].parentNode.appendChild(c);
                    $('#tableQuestion')[0].parentNode.appendChild(tableAddQuestion);
                    $('#tableQuestion')[0].parentNode.appendChild(submitButton);
                }

                /*добавление нового вопроса*/
                $("#addQuestion").click(addQuestion)

                /*очистить текст вопроса?*/
                $('#deleteQuestion').click(deleteQuestion);

    </script>
}